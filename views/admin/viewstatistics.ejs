<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link rel="stylesheet" href="/css/aviewstatistics.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<div class="container">
    <section>
        <button class="burger-menu" onclick="toggleSidebar()">â˜°</button>
        <div class="sidebar">
            <figure class="center-figure">
                <div class="logos">
                    <img src="logos/ccslogo.png" alt="Logo" style="width:100%; max-width: 100px;">
                </div>
            </figure>
            <a href="/admin/home" class="active">Dashboard</a>
            <a href="/admin/editprofile">Account</a>
            <a href="/admin/students">Students</a>
            <a href="/admin/viewsitin">Sit-in</a>
            <a href="/admin/viewrecords">Records</a>
            <a href="/admin/viewreports">Reports</a>
            <a href="/admin/viewfeedbacks">Feedbacks</a>
            <a href="/admin/viewstatistics">Announcement</a>
            <div class="sidebottom">
                <div class="logout-section" onclick="logout()">
                    <span class="logout-icon">&#128075;</span>
                    <span class="logout-label">Logout</span>
                </div>
            </div>
        </div>
    </section>
    
    
    <main class="main-content">
        <div class="container2" style="width: 220vh; height: 90vh;">
            <div class="left-section" style="background-color: white; width: 70vh;">
                <canvas id="myPieChart" width="400" height="400"></canvas>
            </div>
            <div class="right-section" style="background-color: white; width: 70vh; padding: 50px;">
                <h2>Post Announcement</h2>
                <form id="announcement-form">
                    <input type="hidden" id="author" name="author">
                    <textarea id="content" name="content" style="height: 30vh; width: auto;" required></textarea>
                    <br>
                    <button type="submit">Post</button>
                </form>
            </div>
            <div style="background-color: white; width: 50vh; padding: 25px; border-radius: 10px;">
                <h2>Announcements</h2>
                <div id="announcements">
                    <!-- Example Announcement -->
                    <div class="announcement-item">
                        <h4>John Doe</h4>
                        <p>This is an example announcement. Please update your system to the latest version.</p>
                    </div>
                    <!-- More announcements will be dynamically populated here -->
                </div>
            </div>
        </div>
    </main>
    <script>
        let sidebarVisible = false;

function toggleSidebar() {
    const sidebar = document.querySelector('.sidebar');
    sidebarVisible = !sidebarVisible; // Toggle visibility state
    if (sidebarVisible) {
        sidebar.classList.add('show'); // Show sidebar
    } else {
        sidebar.classList.remove('show'); // Hide sidebar
    }
}

window.onclick = function (event) {
    const sidebar = document.querySelector('.sidebar');
    const burgerMenu = document.querySelector('.burger-menu');
    if (sidebarVisible && !sidebar.contains(event.target) && event.target !== burgerMenu) {
        sidebar.classList.remove('show'); // Hide sidebar when clicking outside
        sidebarVisible = false;
    }
};

        document.addEventListener('DOMContentLoaded', () => {
            const username = localStorage.getItem('username');  
            if (username) {
                fetch('/api/student', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ username })
                })
                .then(response => response.json())
                .then(student => {
                    console.log('Fetched student data:', student);
                    if (student) {
                        const author = `${student.firstname} ${student.lastname} (Admin)`;
                        document.getElementById('author').value = author;

                        console.log('Updating the DOM with student data');
                        document.getElementById('student-name2').textContent = `${student.firstname} ${student.lastname}`;
                        document.getElementById('student-name').textContent = `${student.firstname} ${student.lastname}`;
                        document.getElementById('student-course').textContent = student.course;
                        document.getElementById('student-year').textContent = student.level;
                        document.getElementById('student-email').textContent = student.email;
                        document.getElementById('student-address').textContent = student.address || 'N/A';
                        document.getElementById('student-session').textContent = student.session_value;
                        document.getElementById('student-picture-img').src = `public/pfp/${student.username}.jpg`; // Update picture src
                    } else {
                        console.error('No student data returned');
                    }
                })
                .catch(error => console.error('Error fetching student data:', error));
            } else {
                console.error('Username not found in localStorage');
                alert('Failed to fetch student data. Please try again.');
            }
        });

        window.onload = function() {
            highlightActiveLink();
            fetchStatistics();
            fetchAnnouncements();
        };

        document.getElementById('announcement-form').addEventListener('submit', function(event) {
            event.preventDefault();
            postAnnouncement();
        });

        function postAnnouncement() {
            const author = document.getElementById('author').value;
            const content = document.getElementById('content').value;

            fetch('/api/announcement', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ author, content })
            })
            .then(response => response.json())
            .then(data => {
                if (data.message === 'Announcement created successfully') {
                    const announcement = {
                        author,
                        date_created: new Date().toISOString(),
                        content
                    };
                    addAnnouncementToList(announcement);
                } else {
                    alert('Failed to post announcement');
                }
            })
            .catch(error => console.error('Error posting announcement:', error));
        }

        function addAnnouncementToList(announcement) {
            const announcementsDiv = document.getElementById('announcements');
            const announcementDiv = document.createElement('div');
            announcementDiv.classList.add('announcement');

            const announcementHeader = document.createElement('div');
            announcementHeader.classList.add('announcement-header');
            announcementHeader.textContent = `${announcement.author} | ${new Date(announcement.date_created).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' })}`;

            const announcementContent = document.createElement('div');
            announcementContent.textContent = announcement.content;

            announcementDiv.appendChild(announcementHeader);
            announcementDiv.appendChild(announcementContent);

            announcementsDiv.prepend(announcementDiv); // Add the new announcement at the top
        }

        function fetchAnnouncements() {
            fetch('/api/announcements')
                .then(response => response.json())
                .then(data => {
                    const announcementsDiv = document.getElementById('announcements');
                    announcementsDiv.innerHTML = ''; // Clear previous announcements
                    data.forEach(announcement => {
                        const announcementDiv = document.createElement('div');
                        announcementDiv.classList.add('announcement-item');
                        announcementDiv.innerHTML = `
                            <div class="announcement-header">${announcement.author}</div>
                            <div class="announcement-date">${new Date(announcement.date_created).toLocaleDateString()}</div>
                            <div class="announcement-content">${announcement.content}</div>
                        `;
                        announcementsDiv.appendChild(announcementDiv);
                    });
                })
                .catch(error => console.error('Error fetching announcements:', error));
        }
        

        function fetchStatistics() {
            fetch('/api/statistics')
                .then(response => response.json())
                .then(data => {
                    console.log('Statistics data:', data); // Add this line to debug
                    createPieChart(data);
                })
                .catch(error => console.error('Error fetching statistics:', error));
        }

        function createPieChart(data) {
            const ctx = document.getElementById('myPieChart').getContext('2d');
            const myPieChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: ['Registered Students', 'Currently Sit-In', 'Total Sit-Ins'],
                    datasets: [{
                        data: [data.studentCount, data.sitInCount, data.totalSitIns],
                        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']
                    }]
                },
                options: {
                    responsive: true
                }
            });
        }
        document.addEventListener('DOMContentLoaded', () => {
                const username = localStorage.getItem('username');  
                if (username) {
                    fetch('/api/student', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ username })
                    })
                    .then(response => response.json())
                    .then(student => {
                        if (student) {
                            document.getElementById('student-name2').textContent = `${student.firstname} ${student.lastname}`;
                            document.getElementById('email').textContent = student.email;
                            document.getElementById('profilePicDisplay').src = `/pfp/${student.idno}.png`;
                        } else {
                            console.error('No student data returned');
                        }
                    })
                    .catch(error => console.error('Error fetching student data:', error));
                } else {
                    console.error('Username not found in localStorage');
                    alert('Failed to fetch student data. Please try again.');
                }
            });


            
        function logout() {
            const username = localStorage.getItem('username');
            if (username) {
                fetch('/logout', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ username })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.message === 'Logged out successfully') {
                        localStorage.removeItem('email');
                        window.location.href = '/';
                    } else {
                        alert('Logout failed');
                    }
                })
                .catch(error => console.error('Error during logout:', error));
            } else {
                console.error('Username not found in localStorage');
            }
        }

        function highlightActiveLink() {
            const currentPath = window.location.pathname;
            const links = document.querySelectorAll('.sidebar a');
            links.forEach(link => {
                if (link.getAttribute('href') === currentPath) {
                    link.classList.add('active');
                } else {
                    link.classList.remove('active');
                }
            });
        }

        function toggleDropdown(event) {
            event.preventDefault(); // Prevent the default link behavior
            var dropdown = event.target.nextElementSibling; // Get the next sibling element (the dropdown)
            if (dropdown.style.display === "block") {
                dropdown.style.display = "none";
            } else {
                dropdown.style.display = "block";
            }
        }
    </script>
</body>
</html>
